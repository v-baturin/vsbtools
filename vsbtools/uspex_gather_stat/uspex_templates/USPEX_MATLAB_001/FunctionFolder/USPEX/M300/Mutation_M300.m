function Mutation_M300(Ind_No)

% USPEX Version 7.4.1
global POP_STRUC
global ORG_STRUC
global OFF_STRUC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%% CREATING Mutants by atom positions mutation%%%%%%%%%%%%%%%%%
goodAtomMutant = 0;
count = 1;

while goodAtomMutant~=1 

      count = count + 1;
      if count > 50
         USPEXmessage(508,'',0);
         Random_M300(Ind_No);
         break;
      end

      toMutate = find(ORG_STRUC.tournament>RandInt(1,1,[0,max(ORG_STRUC.tournament)-1]));
      ind = POP_STRUC.ranking(toMutate(end));

      GB_order  =  POP_STRUC.POPULATION(ind).GB_order;
      GB_LATTICE = POP_STRUC.POPULATION(ind).GB_LATTICE;
      GB_numIons = POP_STRUC.POPULATION(ind).GB_numIons;
      GB_atyp    = POP_STRUC.POPULATION(ind).GB_typesAList;
      father = POP_STRUC.POPULATION(ind).GB_COORDINATES;

      [MUT_COORD]= move_all_atom_Mutation(father, GB_numIons, GB_LATTICE, GB_order, 0.5);
      N_Moved = sum(GB_numIons);

      bulk_lat    =ORG_STRUC.bulk_lat;
      bulk_pos    =ORG_STRUC.bulk_pos;
      bulk_atyp   =ORG_STRUC.bulk_atyp';
      bulk_numIons=ORG_STRUC.bulk_ntyp;
      numIons = GB_numIons + bulk_numIons;

      [lat, candidate, typesAList, chanAList] = makeGB(numIons, GB_LATTICE, MUT_COORD, GB_atyp, bulk_lat, bulk_pos, bulk_atyp, ORG_STRUC.vacuumSize(1));
      goodAtomMutant = distanceCheck(candidate, lat, numIons, ORG_STRUC.minDistMatrice);

    if goodAtomMutant==1 
        OFF_STRUC.POPULATION(Ind_No).Bulk_LATTICE=bulk_lat;
        OFF_STRUC.POPULATION(Ind_No).Bulk_COORDINATES=bulk_pos;
        OFF_STRUC.POPULATION(Ind_No).Bulk_typesAList=bulk_atyp;
        OFF_STRUC.POPULATION(Ind_No).Bulk_numIons=bulk_numIons;

        OFF_STRUC.POPULATION(Ind_No).numIons = numIons;
        OFF_STRUC.POPULATION(Ind_No).LATTICE = lat;
        OFF_STRUC.POPULATION(Ind_No).COORDINATES = candidate;
        OFF_STRUC.POPULATION(Ind_No).typesAList = typesAList;
        OFF_STRUC.POPULATION(Ind_No).chanAList=chanAList;

        OFF_STRUC.POPULATION(Ind_No).GB_COORDINATES = MUT_COORD;
        OFF_STRUC.POPULATION(Ind_No).GB_LATTICE = GB_LATTICE;
        OFF_STRUC.POPULATION(Ind_No).GB_numIons = GB_numIons;
        OFF_STRUC.POPULATION(Ind_No).GB_typesAList = GB_atyp;

        info_parents = struct('parent', {},'N_Moved', {}, 'enthalpy', {});
        info_parents(1).parent = num2str(POP_STRUC.POPULATION(ind).Number);
        info_parents.N_Moved = N_Moved;
        info_parents.enthalpy = POP_STRUC.POPULATION(ind).Enthalpies(end)/sum(numIons);
        OFF_STRUC.POPULATION(Ind_No).Parents = info_parents;
        OFF_STRUC.POPULATION(Ind_No).howCome = 'CoorMutate';
        disp(['Structure ' num2str(Ind_No) '  generated by mutation']);
    end
end
%%%%%%%%%%%%%%% END creating mutants%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
