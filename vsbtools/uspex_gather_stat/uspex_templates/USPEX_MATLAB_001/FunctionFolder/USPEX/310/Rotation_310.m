function Rotation_310(Ind_No)

% updated : 8.1.4
global POP_STRUC
global ORG_STRUC
global OFF_STRUC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%% CREATING Mutants by mutation%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goodMutant = 0;
count = 1;
while goodMutant ~= 1
    count = count + 1;
    if count > 50
       %disp('failed to do Rotation in 50 attempts, switch to Random');
       USPEXmessage(510,'',0);
       Random_310(Ind_No);
       break;
    end

    toRotate = find (ORG_STRUC.tournament>RandInt(1,1,[0,max(ORG_STRUC.tournament)-1]));
    IND = POP_STRUC.ranking(toRotate(end));
    MtypeLIST = POP_STRUC.POPULATION(IND).MtypeLIST;
    numMols   = POP_STRUC.POPULATION(IND).numMols;
    lattice   = POP_STRUC.POPULATION(IND).LATTICE;
    numIons   = POP_STRUC.POPULATION(IND).numIons;
    typesAList= POP_STRUC.POPULATION(IND).typesAList;
    ROTMOLS   = POP_STRUC.POPULATION(IND).MOLECULES;
    if isfield(ROTMOLS, 'Operation')
       [ROTMOLS,rotNow] = Rotation_Symmetry(ROTMOLS, lattice, MtypeLIST);
    else
       [ROTMOLS,rotNow] = Rotation_Random(ROTMOLS, MtypeLIST);
    end

    goodMutant =  newMolCheck(ROTMOLS, lattice, MtypeLIST, ORG_STRUC.minDistMatrice-0.2);
    if goodMutant == 1
        OFF_STRUC.POPULATION(Ind_No).MOLECULES = ROTMOLS;
        OFF_STRUC.POPULATION(Ind_No).LATTICE = lattice;
        OFF_STRUC.POPULATION(Ind_No).numIons = numIons;
        OFF_STRUC.POPULATION(Ind_No).numMols = numMols;
        OFF_STRUC.POPULATION(Ind_No).MtypeLIST = MtypeLIST;
        OFF_STRUC.POPULATION(Ind_No).typesAList = typesAList;
        info_parents = struct('parent', {}, 'howManyRots', {}, 'enthalpy',{});
        info_parents(1).parent=num2str(POP_STRUC.POPULATION(IND).Number);
        info_parents.enthalpy = POP_STRUC.POPULATION(IND).Enthalpies(end)/sum(numIons);
        info_parents.howManyRots=rotNow;
        OFF_STRUC.POPULATION(Ind_No).Parents = info_parents;
        OFF_STRUC.POPULATION(Ind_No).howCome = ' Rotate ';
        disp(['Structure ' num2str(Ind_No) '  generated by rotmutation']);
    end
end

%%%%%%%%%%%%%%% END creating mutants%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
